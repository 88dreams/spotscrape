Metadata-Version: 2.2
Name: spotscrape
Version: 1.0.0
Summary: A tool for scraping music information and creating Spotify playlists
Author: 88dreams
License: MIT
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: flask>=2.0.1
Requires-Dist: pywebview>=4.0
Requires-Dist: flask-cors>=4.0.0
Requires-Dist: spotipy>=2.19.0
Requires-Dist: openai>=0.27.0
Requires-Dist: playwright>=1.20.0
Requires-Dist: aiofiles>=24.1.0
Requires-Dist: aiohappyeyeballs>=2.4.4
Requires-Dist: aiohttp>=3.11.11
Requires-Dist: beautifulsoup4>=4.12.3
Requires-Dist: requests>=2.32.3
Requires-Dist: python-dotenv>=1.0.1
Requires-Dist: tqdm>=4.67.1
Requires-Dist: tzdata>=2024.2
Requires-Dist: email-validator>=2.1.0
Requires-Dist: pillow>=10.2.0
Requires-Dist: psutil>=5.9.8
Provides-Extra: dev
Requires-Dist: build; extra == "dev"
Requires-Dist: twine; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Provides-Extra: unix
Requires-Dist: uvloop>=0.19.0; extra == "unix"

# SpotScrape

SpotScrape is a modern desktop application that helps you discover and create Spotify playlists from web content. It uses both direct URL scanning and AI-powered content analysis to find and organize music.

## Features

- üéµ Scan web pages for Spotify album links
- ü§ñ AI-powered music content extraction
- üìù Create Spotify playlists automatically
- üé® Modern, user-friendly interface
- üîÑ Support for various music review sites and blogs

## Prerequisites

- Python 3.8 or higher
- Spotify Developer Account
- OpenAI API Key (for AI-powered scanning)
- Git (for cloning the repository)

## Setup Instructions

1. **Clone the Repository**
   ```bash
   git clone https://github.com/88dreams/spotscrape.git
   cd spotscrape
   ```

2. **Create and Activate Virtual Environment**
   ```bash
   # Windows
   python -m venv venv
   .\venv\Scripts\activate

   # macOS/Linux
   python3 -m venv venv
   source venv/bin/activate
   ```

3. **Install Dependencies**
   ```bash
   pip install -r requirements.txt
   ```

4. **Configure API Keys**
   - Copy the example configuration file:
     ```bash
     cp config.json.example config.json
     ```
   - Edit `config.json` and add your API keys:
     - Spotify API credentials (from [Spotify Developer Dashboard](https://developer.spotify.com/dashboard))
     - OpenAI API key (from [OpenAI Platform](https://platform.openai.com/api-keys))

5. **Spotify Developer Setup**
   1. Go to [Spotify Developer Dashboard](https://developer.spotify.com/dashboard)
   2. Create a new application
   3. Add `http://localhost:8888/callback` to the Redirect URIs
   4. Copy the Client ID and Client Secret to your `config.json`

## Running the Application

1. **Start the Application**
   ```bash
   # From the project root directory
   python -m spotscrape
   ```

2. **First-Time Setup**
   - On first run, you'll need to authorize the application with Spotify
   - A browser window will open for authentication
   - After authorizing, you can close the browser window

## Usage Guide

### URL Scanning
1. Enter a URL containing Spotify album links
2. Click "Scan URL"
3. Review the found albums
4. Select albums to include in playlist
5. Click "Create Playlist"

### AI-Powered Scanning
1. Enter a URL containing music content
2. Select "GPT Scan" option
3. Wait for the AI to analyze the content
4. Review the found albums
5. Create your playlist

### Playlist Creation Options
- Include all tracks from albums
- Include only the most popular track
- Include only the first track
- Customize playlist name and description

## Troubleshooting

### Common Issues

1. **Application Won't Start**
   - Check if all dependencies are installed
   - Verify `config.json` exists and is properly formatted
   - Ensure Python version is 3.8 or higher

2. **Authentication Errors**
   - Verify Spotify API credentials
   - Check redirect URI in Spotify Developer Dashboard
   - Delete `.cache` file and try again

3. **Scanning Issues**
   - Check internet connection
   - Verify URL is accessible
   - Ensure OpenAI API key is valid (for GPT scanning)

### Error Logs
- Check logs in `src/spotscrape/logs/` directory
- Debug logs are named `spot-debug-YYYYMMDD.log`
- Spotify-specific logs are in `spot-spotify-YYYYMMDD.log`

## Development Setup

For developers who want to contribute:

1. **Fork and Clone**
   ```bash
   git clone https://github.com/yourusername/spotscrape.git
   cd spotscrape
   ```

2. **Create Development Branch**
   ```bash
   git checkout -b feature/your-feature-name
   ```

3. **Install Development Dependencies**
   ```bash
   pip install -r requirements-dev.txt
   ```

4. **Run Tests**
   ```bash
   pytest
   ```

## License

This project is licensed under the MIT License - see the LICENSE file for details.

## Acknowledgments

- Built with [Spotipy](https://spotipy.readthedocs.io/)
- UI powered by [Flask](https://flask.palletsprojects.com/) and [pywebview](https://pywebview.flowrl.com/)
- AI features powered by [OpenAI](https://openai.com/)
   
